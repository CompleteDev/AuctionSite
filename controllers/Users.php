<?php/** * Created by PhpStorm. * User: mike.richardson * Date: 11/20/2018 * Time: 9:15 AM */class Users extends Controller{    public  function __construct()    {        $this->userModel = $this->model('User');        $this->pageModel = $this->model('Page');        $this->userAdminMDL = $this->model('AdminUsers');        $this->oShared = $this->model('SharedMDL');        $this->send_messaging = $this->model('Messaging');    }    public  function profile()    {        if(!isset($_SESSION['user_id']))        {            redirect('users/login');        }        $mainInfo = $this->pageModel->getMainPageInfo();        $userInfo = $this->userAdminMDL->getUserInfo($_SESSION['user_id']);        $watching = $this->userModel->getWatching($_SESSION['user_id']);        $history = $this->userModel->getBidHistory($_SESSION['user_id']);        $data =            [                'pageTitle' => 'Profile',                'main' => $mainInfo,                'userInfo' => $userInfo,                'watching' => $watching,                'history' => $history,            ];        $this->view('users/profile', $data);    }    public  function register()    {        //check for post        if($_SERVER['REQUEST_METHOD'] == 'POST')        {            $mainInfo = $this->pageModel->getMainPageInfo();            $results = $this->userModel->getTheTerms();            //Process form            //Sanitize post data            $_POST = filter_input_array(INPUT_POST, FILTER_SANITIZE_STRING);            //init data            $data =[                'main' => $mainInfo,                'first_name' => trim($_POST['first_name']),                'last_name' => trim($_POST['last_name']),                'email' => trim($_POST['email']),                'password' => trim($_POST['password']),                'confirm_password' => trim($_POST['confirm_password']),                'TandC' => $results,                'first_name_err' => '',                'last_name_err' => '',                'email_err' => '',                'password_err' => '',                'confirm_password_err' => '',                'termsconditons_err' => ''            ];            //validate input            if(empty($data['email']))            {                $data['email_err'] = 'Please enter email';            }            else            {                //Check email is used                if($this->userModel->findUserByEmail($data['email']))                {                    $data['email_err'] = 'Email already used.';                }            }            if(empty($data['first_name']))            {                $data['first_name_err'] = 'Please enter first name';            }            if(empty($data['last_name']))            {                $data['last_name_err'] = 'Please enter last name';            }            if(empty($data['password']))            {                $data['password_err'] = 'Please enter Password';            }            elseif (strlen($data['password']) < 6)            {                $data['password_err'] = 'Password must be at least 6 characters.';            }            if(empty($data['confirm_password']))            {                $data['confirm_password_err'] = 'Please confirm password';            }            else            {                if($data['password'] != $data['confirm_password'])                {                    $data['confirm_password_err'] = 'Passwords do not match';                }            }            if(empty($_POST['readTerms']))            {                $data['termsconditons_err'] = 'You must read and agree to the terms and conditions';            }            //Make sure errors are empty            if(empty($data['email_err']) && empty($data['first_name_err']) && empty($data['last_name_err']) && empty($data['password_err'])  && empty($data['confirm_password_err']) && empty($data['termsconditons_err']))            {                //Validated                //Hash password                $data['password'] = password_hash($data['password'], PASSWORD_DEFAULT);                //Register User                if($this->userModel->register($data))                {                    flash('register_success', 'You are registered and can log in!');                    redirect('users/login');                }                else                {                    die('Error in registration.');                }            }            else            {                //Load View with errors                $this->view('users/register', $data);            }        }        else        {            $mainInfo = $this->pageModel->getMainPageInfo();            $results = $this->userModel->getTheTerms();            //Init Data            $data =[                'main' => $mainInfo,                'TandC' => $results,                'first_name' => '',                'last_name' => '',                'email' => '',                'password' => '',                'confirm_password' => '',                'first_name_err' => '',                'last_name_err' => '',                'email_err' => '',                'password_err' => '',                'confirm_password_err' => '',                'termsconditons_err' => ''            ];            //load view            $this->view('users/register', $data);        }    }    public  function login()    {        //check for post        //Sanitize post data        $_POST = filter_input_array(INPUT_POST, FILTER_SANITIZE_STRING);        //init data        if($_SERVER['REQUEST_METHOD'] == 'POST')        {            $mainInfo = $this->pageModel->getMainPageInfo();            //Process form            $data =[                'main' => $mainInfo,                'email' => trim($_POST['email']),                'password' => trim($_POST['password']),                'email_err' => '',                'password_err' => ''            ];            if(empty($data['email']))            {                $data['email_err'] = 'Please enter email';            }            if(empty($data['password']))            {                $data['email_err'] = 'Please enter Password';            }            //check for user/email            if($this->userModel->findUserByEmail($data['email']))            {                //User found            }            else            {                //user not found                $data['email_err'] = 'No User Found';            }            if(empty($data['email_err']) && empty($data['password_err']))            {                //Validated                //check and set logged in user                $loggedInUser = $this->userModel->login($data['email'], $data['password']);                if($loggedInUser)                {                    //create session                    $this->createUserSession($loggedInUser);                }                else                {                    $data['password_err'] = 'Password incorrect';                    $this->view('users/login', $data);                }            }            else            {                //Load View with errors                $this->view('users/login', $data);            }        }        else        {            $mainInfo = $this->pageModel->getMainPageInfo();            //Init Data            $data =[                'main' => $mainInfo,                'email' => '',                'password' => '',                'email_err' => '',                'password_err' => ''            ];            //load view            $this->view('users/login', $data);        }    }    public function ModalLogIn()    {        $_POST = filter_input_array(INPUT_POST, FILTER_SANITIZE_STRING);        if($_SERVER['REQUEST_METHOD'] == 'POST')        {            $data =                [                    'email' => trim($_POST['UserName']),                    'password' => trim($_POST['Password']),                ];            if($this->userModel->findUserByEmail($data['email']))            {                $loggedInUser = $this->userModel->login($data['email'], $data['password']);                if($loggedInUser)                {                    //create session                    $this->createUserSession($loggedInUser);                }                else                {                }            }            else            {            }        }    }    public function  ModalRegistration()    {        if($_SERVER['REQUEST_METHOD'] == 'POST')        {            $_POST = filter_input_array(INPUT_POST, FILTER_SANITIZE_STRING);            $data =                [                    'reg_first_name' => trim($_POST['reg_first_name']),                    'reg_last_name' => trim($_POST['reg_last_name']),                    'reg_email' => trim($_POST['reg_email']),                    'streetaddress' => trim($_POST['streetaddress']),                    'city' => trim($_POST['city']),                    'state' => trim($_POST['state']),                    'zip' => trim($_POST['zip']),                    'phone' => trim($_POST['phone']),                    'fourss' => trim($_POST['fourss']),                    'password' => trim($_POST['password']),                ];            if($this->userModel->findUserByEmail($data['reg_email']))            {                $results = ['reply' => 'Exists'];                echo json_encode($results);            }            else            {                $data['password'] = password_hash($data['password'], PASSWORD_DEFAULT);                $this->userModel->register($data);                $this->send_messaging->insertEmail('New User','4023367611@vtext.com','mike@supergroovymail.com', 'There has been a new Registration'  . "\r\n"  . trim($_POST['reg_first_name']) . ' ' . trim($_POST['reg_last_name']));                $this->send_messaging->insertEmail('New User','landmarketers@gmail.com','info@landmarketers.com', 'There has been a new Registration'  . "\r\n"  . trim($_POST['reg_first_name']) . ' ' . trim($_POST['reg_last_name']));                //$this->send_messaging->insertEmail('New User','landmarketers@gmail.com','info@landmarketers.com', 'There has been a new Registration'  . "\r\n"  . trim($_POST['reg_first_name']) . ' ' . trim($_POST['reg_last_name']));                $bidderinfo = $this->userModel->getBidderInfo(trim($_POST['reg_email']));                $this->send_messaging->insertEmail('Verify Email',(trim($_POST['reg_email'])),'info@landmarketers.com','Thank you for registering with Land Marketers, your account will be active within 24 hours' . "\r\n"  .  'Please click the link below to verify your email address'  . "\r\n"  . 'https://www.landmarketers.com/pages/verifyemail/' . $bidderinfo->email_code  . "\r\n"  .  "\r\n". 'Your bidder number is: ' . $bidderinfo->bid_number . "\r\n".'Thank You' . "\r\n". "Land Marketers");                $results = ['reply' => 'Good'];                echo json_encode($results);            }        }    }    public  function createUserSession($user)    {        $_SESSION['user_id'] = $user->user_id;        $_SESSION['user_emial'] = $user->email;        $_SESSION['user_name'] = $user->first_name;        redirect('users/profile/' . $_SESSION['user_id']);    }    public  function  logout()    {        unset($_SESSION['user_id']);        unset($_SESSION['user_emial']);        unset($_SESSION['user_name']);        session_destroy();        redirect('');    }    public  function isLoggedIn()    {        if(isset($_SESSION['user_id']))        {            return true;        }        else        {            return false;        }    }}